@page
@model DashboardWebApp.Areas.UserArea.Pages.Videos.IndexModel
@{
    ViewData["Title"] = "Dashboard - User Videos";
}
@{
    var format = "yyyy-MM-dd";
    var fromDateDefault3Months = DateTime.UtcNow.AddMonths(-3).ToString(format);
    var fromDateDefault = DateTime.UtcNow.AddDays(-1).ToString(format);
    var toDateDefault = DateTime.UtcNow.ToString(format);
}
<style>
    .flex {
        display: flex;
    }

    .center-self {
        align-self: center;
    }

    .w-5 {
        width: 5% !important;
    }

    #noteModal .modal-content {
        margin-top: 50%;
    }

    #userNote {
        display: none;
    }
</style>
<link href="~/css/multiselect/bootstrap-multiselect.min.css" rel="stylesheet" type="text/css" />
<div class="text-left">
    <h3 class="display-">Videos</h3>
</div>
<br />
<form id="filterForm" method="post">
    <div class="mb-3 flex">
        <label for="name" class="form-label center-self">ISBN</label>
        <input asp-for="Input.ISBN" type="text" class="form-control w-25 ml-3" id="isbn" placeholder="contains">
    </div>
    <div class="mb-3 flex">
        <label for="dateTaken" class="form-label center-self">Date taken</label>
        <input type="date" class="ml-3" value="@fromDateDefault3Months" asp-for="Input.DateTakenFrom" id="datePickerFrom">
        <span class="ml-3 mr-3">To</span>
        <input type="date" asp-for="Input.DateTakenTo" value="@toDateDefault" id="datePickerTo">
    </div>
    <div class="mb-3 flex">
        <label for="dateTaken" class="form-label center-self">Date uploaded</label>
        <input type="date" class="ml-3" value="@fromDateDefault3Months" asp-for="Input.DateUploadedFrom" id="dateUploadedFrom">
        <span class="ml-3 mr-3">To</span>
        <input type="date" asp-for="Input.DateUploadedTo" value="@toDateDefault" id="dateUploadedTo">
    </div>
    <div class="mb-3">
        <label for="takenByUser" class="form-label center-self">Taken by user</label>
        <select id="takenByDropDown"
                multiple="multiple" class="dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @foreach (var takenByUser in Model.TakenByUserDropDown)
            {
                <option value="@takenByUser.Value">@takenByUser.Text</option>
            }
        </select>
    </div>
    <div class="mb-3 flex">
        <label for="name" class="form-label center-self">User note</label>
        <select id="user-note-selection" class="form-control ml-2" style="width:10%;">
            <option value="unselected">Unselected</option>
            <option value="notempty">Not Empty</option>
            <option value="contains">Contains</option>
        </select>
        <input asp-for="Input.UserNote" type="text" class="form-control w-25 ml-3" id="userNote" placeholder="contains">
    </div>
    <div class="mb-3">
        <label for="bookType" class="form-label center-self">Book Type</label>
        <select id="bookTypeDropDown"
                multiple="multiple" class="dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @foreach (var bookType in Model.BookTypeDropDown)
            {
                <option value="@bookType.Value">@bookType.Text</option>
            }
        </select>
    </div>
    <div class="mb-3">
        <label for="labels" class="form-label center-self">Label</label>
        <select id="labelsDropDown"
                multiple="multiple" class="dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @foreach (var label in Model.BookVideoLabels)
            {
                <option value="@label.Value">@label.Text</option>
            }
        </select>
    </div>
    <div class="mb-3 flex">
        <label for="videoDuration" class="form-label center-self">Video duration</label>
        <input type="number" class="ml-3 w-5" value="0" asp-for="Input.VideoDurationFrom" id="videoDurationFrom">
        <span class="ml-3 mr-3">To</span>
        <input type="number" class="w-5" value="0" asp-for="Input.VideoDurationTo" id="videoDurationTo">
    </div>
    <div class="mb-3 flex">
        <label for="fileSize" class="form-label center-self">File size</label>
        <input type="number" class="ml-3 w-5" value="0" asp-for="Input.FileSizeFrom" id="fileSizeFrom">
        <span class="ml-3 mr-3">To</span>
        <input type="number" class="w-5" value="0" asp-for="Input.FileSizeTo" id="fileSizeTo">
    </div>
    <div class="mb-3">
        <label for="takenByUser" class="form-label center-self">Has comments</label>
        <select id="hasCommentsDropDown"
                multiple="multiple" class="dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <option value="1">Yes</option>
            <option value="0">No</option>
        </select>
    </div>
    <div class="mb-3">
        <button id="filter-submit" type="button" class="btn btn-primary">Filter</button>
        <button id="reset-filters" type="button" class="btn btn-secondary">Reset Filters</button>
    </div>
</form>
<div id="videos-grid"></div>
<div id="noteModal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Note</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="noteContent"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/kendo/jquery.min.js"></script>
    <script src="~/js/kendo/jszip.min.js"></script>
    <script src="~/js/kendo/kendo.all.min.js"></script>
    <script id="action-template" type="text/x-kendo-template">
        <div style="display: flex; flex-direction: column">
            <a type="button" class="btn btn-primary">Play video</a>
            <a style="margin-top: 10px;" type="button" class="btn btn-secondary">Add a label</a>
             #if(note) {#<a onclick="showModal('#=note#')" style="margin-top: 10px;" type="button" class="btn btn-secondary">View note</a>#}#
        </div>
    </script>
    <script src="~/js/multiselect/bootstrap-multiselect.min.js" type="text/javascript"></script>
    <script>
        $(document).ready(function() {
            $("#videos-grid").kendoGrid({
                dataSource: {
                    schema: {
                        data: "data",
                        total: "total",
                        aggregates: "aggregates",
                        groups: "groups",
                        errors: "errors",
                    },
                    transport: {
                        read: {
                            url: "/api/books/getBooks",
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            type: 'POST'
                        },
                        parameterMap: function(data, operation) {
                            return JSON.stringify(data);
                        }
                    },
                    error: function(e) {
                        console.log(e.errors);
                        e.sender.cancelChanges();
                    },
                    pageSize: 10,
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true,
                },
                groupable: true,
                sortable: true,
                reorderable: true,
                resizable: true,
                filterable: {
                    operators: {
                        string: {
                            eq: "Equal to",
                            contains: "Contains"
                        }
                    },
                },
                columnMenu: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                noRecords: true,
                columns: [{
                    field: "bookId",
                    title: "No",
                    width: 60,
                }, {
                    field: "isbn",
                    title: "ISBN",
                    width: 150
                }, {
                    field: "dateTaken",
                    title: "Date taken",
                    width: 200,
                }, {
                    field: "dateUploaded",
                    title: "Date uploaded",
                    width: 200
                }, {
                    field: "user",
                    title: "User",
                    width: 150
                }, {
                    field: "bookType",
                    title: "BookType",
                    width: 150
                }, {
                    field: "videoDuration",
                    title: "Video Duration",
                    width: 150
                }, {
                    field: "labels",
                    title: "Labels",
                    width: 200
                }, {
                    field: "comment",
                    title: "Has Comment",
                    width: 150
                }, {
                    field: "fileSize",
                    title: "File Size",
                    width: 100
                }, {
                    field: "",
                    title: "Action",
                    width: 200,
                    template: kendo.template($("#action-template").html())
                }]
            });
        });
    </script>
    <script type="text/javascript">
        $('#takenByDropDown, #bookTypeDropDown, #labelsDropDown, #hasCommentsDropDown').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
        });

        var takenByDropDownSelected = [];
        var bookTypeDropDownSelected = [];
        var labelsDropDownSelected = [];
        var hasCommentsDropDownSelected = [];

        $('#takenByDropDown').on('change', function() {
            takenByDropDownSelected = [];

            var selected = $(this).find("option:selected");
            selected.each(function() {
                takenByDropDownSelected.push($(this).val());
            });

            console.log(takenByDropDownSelected)
        });

        $('#bookTypeDropDown').on('change', function() {
            bookTypeDropDownSelected = [];

            var selected = $(this).find("option:selected");
            selected.each(function() {
                bookTypeDropDownSelected.push($(this).val());
            });
        });

        $('#labelsDropDown').on('change', function() {
            labelsDropDownSelected = [];

            var selected = $(this).find("option:selected");
            selected.each(function() {
                labelsDropDownSelected.push($(this).val());
            });
        });

        $('#hasCommentsDropDown').on('change', function() {
            hasCommentsDropDownSelected = [];

            var selected = $(this).find("option:selected");
            selected.each(function() {
                hasCommentsDropDownSelected.push($(this).val());
            });
        });

        $('.multiselect-native-select .btn-group').click(function() {
            $(this).find('.dropdown-menu').toggle();
        });

        $('body').click(function(e) {
            if ($(e.target).hasClass('multiselect') == false && $(e.target).hasClass('multiselect-selected-text') == false && $(e.target).hasClass('dropdown-toggle') == false && $(e.target).hasClass('user-dropdown-name') == false && $(e.target).hasClass('img-profile') == false) {
                $('.dropdown-menu').hide();
            }
        });

        $('#filter-submit').on('click', function() {
            var postModel = {
                isbn: $('#isbn').val(),
                dateTakenFrom: $('#datePickerFrom').val(),
                dateTakenTo: $('#datePickerTo').val(),
                dateUploadedFrom: $('#dateUploadedFrom').val(),
                dateUploadedTo: $('#dateUploadedTo').val(),
                userNote: $('#userNote').val(),
                selectedTakenByUsers: takenByDropDownSelected,
                selectedBookTypes: bookTypeDropDownSelected,
                selectedBookVideoLabels: labelsDropDownSelected,
                videoDurationFrom: $('#videoDurationFrom').val(),
                videoDurationTo: $('#videoDurationTo').val(),
                fileSizeFrom: $('#fileSizeFrom').val(),
                fileSizeTo: $('#fileSizeTo').val(),
                selectedHasComments: hasCommentsDropDownSelected,
                showWithUserNotesOnly: $('#user-note-selection').val() === 'notempty'
            };

            $.ajax({
                url: '/api/books/filterBooks',
                type: 'POST',
                data: postModel,
                success: function() {
                    $("#videos-grid").data("kendoGrid").dataSource.read();
                }
            })
        });

        $('#reset-filters').on('click', function() {
            $.ajax({
                url: '/api/books/resetFilters',
                type: 'POST',
                success: function() {
                    window.location.reload();
                }
            })
        });

        function showModal(note) {
            var noteModal = new bootstrap.Modal(document.getElementById('noteModal'))
            $('#noteModal #noteContent').html(note);
            noteModal.show();
        }

        $('#user-note-selection').on('change', function() {
            var value = $(this).val();

            if (value === "contains") {
                $('#userNote').show();
            } else {
                $('#userNote').hide();
            }

            if (value === 'unselected' || value === 'notempty') {
                $('#userNote').val(null);
            }
        });
    </script>
}